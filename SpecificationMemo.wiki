#labels Featured
=仕様メモ=

<wiki:toc max_depth="2" />

  * 何も再生していない場合というのは、左下のプログレスバーの表示がないとき。

==自動再生==
  * 自動再生ボタンを押したとき、何も再生されていなければ、次曲を再生する。
  * ジングル再生があるときは、ジングル後に次の曲を自動再生する。
  * 初期状態が自動再生のとき、接続後、前枠からのリクやストックが残っていてもすぐに再生しない。
  * 接続したときにすでに何か再生中であれば自動で次曲を再生する。

  * 自動再生の一時停止を行った場合、次の動画を自動で再生しません。<br>何か動画を再生すると自動再生は再開します。

==手動再生==
  * 実は、手動再生ボタンを押すと、何も再生していない場合は、次曲を再生すると等価になっていた。(そういう風に作ったつもりはなかったのだが、現状そうなっている)


==リクエストの保存==
視聴者として使っている場合でもコメントに動画IDが流れると拾いますが、これは保存されません。(ウィンドウ閉じたらご破算)

==自動再生のやり方==
  # /playコマンドを投げる
  # /play smile:sm4401222（ｒｙのコメントを受け取る
  # (再生時間＋次の動画を再生するまでの待ち時間)のタイマーをしかける
  # タイマーでNicoLiveHelper.checkPlayNext()を呼んで、自動再生、一時停止など確認
  # 次曲を再生していいならNicoLiveHelper.playNext()を呼ぶ
  # プレイスタイルから、次曲を選択する
  # 1へ戻る

というわけで、最大再生時間や間隔の設定は、次に再生する動画から適用されることになります。

==デフォルト設定ポリシー==
設定項目のデフォルト値は、その機能が始めて載ったときの初期状態はどうだったか、によって決めています。
たとえば、動画情報の主コメデフォルト値は 0.2版で載せたときのままで、
184コメント発言設定なども、従来どのような動作をしていたかで決まっています。


==リクエストの非同期・同期変換==
概要のみ。<br>
ようは、リクエストは処理キューに順番に並べた上で非同期でどんどん情報取得して、
終わったら、処理キューの先頭にXMLデータがあるかぎり処理をするって方法。

  # array.push(request)
  # send an asynchronous XMLHttpRequest
  # if done;  array(request).xml = responseXML; while(array(0).xml){ xml = array.shift(); process(xml); }


==動画DBの動画情報更新==
動画DBで検索し、その結果が安定したときに、10秒ごとに20件ずつ1週間以上更新されていない動画情報を更新します。


==同時処理に弱い==
基本的に非同期処理を行って終わった順に片付けるやり方していて
シーケンス制御を行っていないので、同時に近いような連続した処理を行った場合に、
実行順序に行動しないことがあります。<br>
例：次曲ボタンを2回連続で押したら、2番目の曲を再生して1番目の曲の情報を主コメするなど。

再生中の曲とプログレスバーの表示が合わないときは、Helper開き直しでOK