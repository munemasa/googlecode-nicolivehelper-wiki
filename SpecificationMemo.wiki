#summary 仕様についてのメモ
#labels Featured

=仕様メモ=

<wiki:toc max_depth="2" />

  * 何も再生していない場合というのは、左下のプログレスバーの表示がないとき。<br>(NicoLiveHelper.inplayがfalseのとき)

==ビットレートの計算==

  * ファイルサイズ*8/時間/*1000* kbps
  * k≠1024。時折そのように計算しているツールを見かけるけど通信の世界なんだから1000で計算しようよ…。

==データ保存の優先順位==

  * NicoLive Helperは複数のウィンドウを開くことが出来ますが、基本的に、最後に閉じたウィンドウの持っている内容が保存されます。
  * 窓１，２を開く。<br>窓１でストックを全削除して閉じる。<br>窓２でストックに追加して閉じる。<br>すると、窓２の内容が最終的に保存されます。
  * ウィンドウ間のデータ一貫性は考慮していません(大変な仕事になるので)。
  * ただし、設定内容はプリファレンスシステムを用いているので、設定内容を変更すると、全てのウィンドウに反映されます。

==再生履歴の記録タイミングについて==
  * /playコマンドを受け取ったタイミングで再生履歴(テキスト)に記録します。
  * 詳細表示の方は再生ボタンを押したタイミングで記録します。

==日時の表示について==

  * 日時表示は地方時に基づきます。
  * 使用しているPCに設定されているタイムゾーンの影響を受けるため、海外から現地の時刻設定で使用する場合、動画投稿日、開演日時の表示は現地時刻になります。<br>でも仮想マシン上のXPでタイムゾーン変えても日本時間で出たんだよね…。

==主コメの失敗(status=error)の動作==

  * status=errorになって主コメができなかった場合、1回だけリトライします。
  * リトライしてもダメだった場合、/playコマンドの送信だったら次曲再生チェックに行きます。
  * この場合、再生ボタンを押した動画が再生されず、次の動画が再生されます。
  * 以下、繰り返し。

  * いずれも一時停止ボタンが押されていると、自動で次曲再生には行きません。

==NGワード処理内容==

  * NG処理はサーバサイドになったので、ツール側では何も行っていません。

  * 完全一致と、大文字小文字ひらがなカタカナを区別しないと、正規表現一致の3パターン存在する(ニコ生仕様)
  * 文字のケースを区別しない場合、全角カタカナに正規化してからチェックを行う。

==/clsを使う理由==
  * PITA方式のように1コメあたりhiddenと通常で2回コメするよりは、/clsで1回消す方が、連続してコメントする場合にコメント総数が少なくなる＝サーバの負荷をちょっとでも減らせるため。それにコメントビューア的にはPITA方式は読みづらいし。

==時刻について==
  * 枠内に収まるかどうか、ロスタイムはいくらか、という計算は、サーバ時刻で行われています。
  * お使いのPCとニコ生サーバとの時刻に差があると、その分が誤差になります。<br>デバッグタブに、Server clock/PC clockとしてそれぞれの時刻を記録しています。
  * 適度に日本標準時に時刻合わせするといいでしょう。<br>主の場合は誤差1秒以内にしています。

==次曲の選び方==
  # (設定によって)枠の残り時間を考慮し、リク、ストックから再生可能な動画をリストアップする。
  # リストアップされた動画に対して、順次、ランダム選曲を行う。

  * ランダム再生での先読みは、疑似乱数のシードを操作することで行っています。<br>リストアップされた動画リスト〔 Random(リストアップされた動画数)〕により決定されるので、先読み後に(リクエスト等により)リストの状態に変化が起こると、先読みした動画を再生できません。

==自動再生==
一言で表すと、未再生の状態から再生中の状態になるには、自動ジングル再生を除き、1回は手動で動画を再生する必要があり。

  * 自動再生ボタンを押したとき、何も再生されていなければ、次曲を再生する。
  * ジングル再生があるときは、ジングル後に次の曲を自動再生する。
  * 初期状態が自動再生のとき、接続後、前枠からのリクやストックが残っていてもすぐに再生しない。
  * 接続したときにすでに何か再生中であれば自動で次曲を再生する。

  * 自動再生の一時停止を行った場合、次の動画を自動で再生しません。<br>何か動画を再生すると自動再生は再開します。

  * リク・ストックに再生できる動画がない、かつ、何も再生していない状態から、自動で何か動画を再生開始することはしない。<br>(リクがやってきたらそれを自動再生するようなことはしない)

==手動再生==
  * 実は、手動再生ボタンを押すと、何も再生していない場合は、次曲を再生すると等価になっていた。(そういう風に作ったつもりはなかったのだが、現状そうなっている)


==リクエストの保存==
視聴者として使っている場合でもコメントに動画IDが流れると拾いますが、これは保存されません。(ウィンドウ閉じたらご破算)

とはいえ、バックアップを取れば残りますが。

==自動再生のやり方==
  # /playコマンドを投げる
  # (再生時間＋次の動画を再生するまでの待ち時間)のタイマーをしかける(生拒否動画対策)
  # /play smile:sm4401222（ｒｙのコメントを受け取る
  # 再度、(再生時間＋次の動画を再生するまでの待ち時間)のタイマーをしかける
  # タイマーでNicoLiveHelper.checkPlayNext()を呼んで、自動再生、一時停止など確認
  # 次曲を再生していいならNicoLiveHelper.playNext()を呼ぶ
  # プレイスタイルから、次曲を選択する
  # 1へ戻る

というわけで、最大再生時間や間隔の設定は、次に再生する動画から適用されることになります。

==デフォルト設定ポリシー==
設定項目のデフォルト値は、その機能が始めて載ったときの初期状態はどうだったか、によって決めています。
たとえば、動画情報の主コメデフォルト値は 0.2版で載せたときのままで、
184コメント発言設定なども、従来どのような動作をしていたかで決まっています。


==リクエストの非同期・同期変換==
概要のみ。<br>
ようは、リクエストは処理キューに順番に並べた上で非同期でどんどん情報取得して、
終わったら、処理キューの先頭にXMLデータがあるかぎり処理をするって方法。

  # array.push(request)
  # send an asynchronous XMLHttpRequest
  # if done;  array(request).xml = responseXML; while(array(0).xml){ xml = array.shift(); process(xml); }

==同時処理に弱い==
基本的に非同期処理を行って終わった順に片付けるやり方していて
シーケンス制御を行っていないので、同時に近いような連続した処理を行った場合に、
実行順序に行動しないことがあります。<br>


==他のツールとの見分け方==
  * 動画情報送信は、必ず /play の後に行う
  * 動画情報の送信間隔は 7秒(バージョンによっては6秒)
  * 数字はカンマフォーマット
  * 初期設定のままだと、動画情報は英語で、Length/Views/Comments/Date/etc.
  * 初期設定のままだと、「>>999 リクエストを受け付けました」
  * P名など、複数項目を連結するときは、原則、カンマを使う
  * ミクノ度が出る
  * 使用者によっては積極的に /cls コマンドを送信する
  * /prepareを行うのは、再生中動画が80%進行したところ
  * /verコメントに反応する(これはこっそりと主の使用ツール見分けるのには適さないな)